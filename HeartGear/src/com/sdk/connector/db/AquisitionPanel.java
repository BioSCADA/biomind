/*
 * @copyright Copyright (c) 2010 Laboratório de Educação Cerebral. (http://www.educacaocerebral.com.br)
 *
 * This file is part of SoftVFC.
 *
 * SoftVFC is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SoftVFC is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with SoftVFC.  If not, see <http://www.gnu.org/licenses/>.
 *
 * *********************
 *
 * Este arquivo é parte do programa SoftVFC.
 *
 * SoftVFC é um software livre; você pode redistribui-lo e/ou
 * modifica-lo dentro dos termos da Licença Pública Geral GNU como
 * publicada pela Fundação do Software Livre (FSF); na versão 3 da
 * Licença.
 *
 * Este programa é distribuido na esperança que possa ser util,
 * mas SEM NENHUMA GARANTIA; sem uma garantia implicita de ADEQUAÇÂO a qualquer
 * MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a
 * Licença Pública Geral GNU para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU
 * junto com este programa, se não, acesse no website oficial:
 * http://www.gnu.org/licenses/gpl.html
 *
 */
/**
 *
 * @author Diego Schmaedech Martins (schmaedech@gmail.com)
 * @version 29/07/2010
 */
package com.sdk.connector.db;

import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  John O'Conner
 */
public class AquisitionPanel extends javax.swing.JPanel {
    DefaultTableModel model ;
    private SimpleDateFormat sdf   = new SimpleDateFormat("yyyy-mm-dd HH:mm:ss.SSSSS"); //NOI18N
    /** Creates new form AquisitionPanel */
    public AquisitionPanel() {
        initComponents();
        aquisition = new Aquisition();
        String[] col = new String [] { "Left Timestamp", "Left RR", "Right Timestamp", "Right RR"}; //NOI18N
        model = new DefaultTableModel(col,0);
        jTable1.setModel(model);
         
    }

    public void addListEntries(List<ListEntry> list) {
//        for(ListEntry entry: list) {
//            model.addRow(entry.getRow());
//        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLastName = new javax.swing.JLabel();
        txtLT = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        txtRT = new javax.swing.JTextField();
        lblMiddleName = new javax.swing.JLabel();
        txtRI = new javax.swing.JTextField();
        lblLRR = new javax.swing.JLabel();
        txtLRR = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtRRR = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/sdk/connector/db/Bundle"); // NOI18N
        lblLastName.setText(bundle.getString("LEFT TIMESTAMP")); // NOI18N

        txtLT.setMinimumSize(new java.awt.Dimension(100, 21));
        txtLT.setPreferredSize(new java.awt.Dimension(100, 21));

        lblFirstName.setText(bundle.getString("RIGHT TIMESTAMP")); // NOI18N

        txtRT.setMinimumSize(new java.awt.Dimension(80, 21));
        txtRT.setPreferredSize(new java.awt.Dimension(80, 21));

        lblMiddleName.setText("Register ID");

        txtRI.setMinimumSize(new java.awt.Dimension(80, 21));
        txtRI.setPreferredSize(new java.awt.Dimension(80, 21));

        lblLRR.setText(bundle.getString("LEFT RR")); // NOI18N

        lblEmail.setText(bundle.getString("RIGHT RR")); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Left Timestamp", "Left RR", "Right Timestamp", "Right RR"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLastName)
                .addComponent(txtLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblFirstName)
                .addComponent(txtRT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblMiddleName)
                .addComponent(txtRI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblLRR)
                .addComponent(txtLRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblEmail)
                .addComponent(txtRRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblLastName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblFirstName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtRT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblMiddleName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtRI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblLRR))
                    .addComponent(txtLRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblEmail))
                    .addComponent(txtRRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
 
    void setLeftTimestamp(Timestamp lt) {
        aquisition.setLeftTimestamp(lt);
        txtLT.setText(lt.toString());
    }
    
    Timestamp getLeftTimestamp() throws ParseException {
        String lt = txtLT.getText();
        Date date = sdf.parse(lt);
        Timestamp ltTimestamp = new  Timestamp( date.getTime());
        aquisition.setLeftTimestamp(ltTimestamp);
        return ltTimestamp;
    }
    
    void setRightTimestamp(Timestamp rt) {
        aquisition.setRightTimestamp(rt);
        txtRT.setText(rt.toString());
        
    }
    
    Timestamp getRightTimestamp() throws ParseException {
        String rt = txtRT.getText();
        Date date = sdf.parse(rt);
        Timestamp rtTimestamp = new  Timestamp( date.getTime());
        aquisition.setRightTimestamp(rtTimestamp);
        return rtTimestamp;
    }
    
    void setIdRegister(int middleName) {
        aquisition.setIdRegister(middleName);
        txtRI.setText(String.valueOf(middleName));
    }

    int getIdRegister() {
        int middleName = Integer.parseInt(txtRI.getText());
        aquisition.setIdRegister(middleName);
        return middleName;
    }
    
    void setLeftRR(int phone) {
        aquisition.setLeftRR(phone);
        txtLRR.setText(String.valueOf(phone));
    }
    
    int getLeftRR() {
        int phone = Integer.parseInt(txtLRR.getText());
        aquisition.setLeftRR(phone);
        return phone;
    }
    
    void setRightRR(int email) {
        aquisition.setRightRR(email);
        txtRRR.setText(String.valueOf(email));
    }
    
    int getRightRR() {
        int email = Integer.parseInt(txtRRR.getText());
        aquisition.setRightRR(email);
        return email;
    }

    void setId(int id) {
        aquisition.setId(id);
        this.id = id;
    }
    
    int getId() { 
        aquisition.setId(this.id);
        return this.id;
    }

    
    public void setAquisition(Aquisition aquisition) {
        if (aquisition != null) {
            setIdRegister(aquisition.getIdRegister());
            setLeftTimestamp(aquisition.getLeftTimestamp());
            setLeftRR(aquisition.getLeftRR());
            setRightTimestamp(aquisition.getRightTimestamp());
            setRightRR(aquisition.getRightRR());
            setId(aquisition.getId());
        }
    }
    
    public Aquisition getAquisition() throws ParseException {
        getIdRegister();
        getLeftTimestamp();
        getLeftRR();
        getRightTimestamp();
        getRightRR();
        getId();
        return aquisition;
    }
    
    
    
    public void clear() {
        txtLT.setText(null);
        txtRI.setText(null);
        txtRT.setText(null);
        txtLRR.setText(null);
        txtRRR.setText(null);
        id = -1;
        aquisition = new Aquisition();
    }
    
    public void setEditable(boolean bEditable) {
        txtRT.setEditable(bEditable);
        txtLT.setEditable(bEditable);
        txtRI.setEditable(bEditable);
        txtLRR.setEditable(bEditable);
        txtRRR.setEditable(bEditable);
        isEditable = bEditable;
    }
    
    public boolean isEditable() {
        return isEditable;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLRR;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMiddleName;
    private javax.swing.JTextField txtLRR;
    private javax.swing.JTextField txtLT;
    private javax.swing.JTextField txtRI;
    private javax.swing.JTextField txtRRR;
    private javax.swing.JTextField txtRT;
    // End of variables declaration//GEN-END:variables
    int id;
    boolean isEditable;
    Aquisition aquisition;
    
}
