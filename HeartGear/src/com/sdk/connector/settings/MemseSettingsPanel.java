/*
 * @copyright Copyright (c) 2010 Laboratório de Educação Cerebral. (http://www.educacaocerebral.com.br)
 *
 * This file is part of SoftVFC.
 *
 * SoftVFC is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SoftVFC is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with SoftVFC.  If not, see <http://www.gnu.org/licenses/>.
 *
 * *********************
 *
 * Este arquivo é parte do programa SoftVFC.
 *
 * SoftVFC é um software livre; você pode redistribui-lo e/ou
 * modifica-lo dentro dos termos da Licença Pública Geral GNU como
 * publicada pela Fundação do Software Livre (FSF); na versão 3 da
 * Licença.
 *
 * Este programa é distribuido na esperança que possa ser util,
 * mas SEM NENHUMA GARANTIA; sem uma garantia implicita de ADEQUAÇÂO a qualquer
 * MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a
 * Licença Pública Geral GNU para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU
 * junto com este programa, se não, acesse no website oficial:
 * http://www.gnu.org/licenses/gpl.html
 *
 */
/**
 *
 * @author Diego Schmaedech Martins (schmaedech@gmail.com)
 * @version 29/07/2010
 */

package com.sdk.connector.settings;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author diego
 */
public class MemseSettingsPanel extends javax.swing.JPanel {

    private static MemseSettingsEntity memseSettingsEntity = new MemseSettingsEntity();

    /**
     * @return the fftSettingsEntity
     */
    public static MemseSettingsEntity getMemseSettingsEntity() {
        return memseSettingsEntity;
    }
    /** Creates new form FFTSettings */
    public MemseSettingsPanel() {
        initComponents();
        buttonGroup1.add(flagPower);
        buttonGroup1.add(flagSquaredPower);
        setEditable(false);
        updateFields();
       jlVLF.setBackground(new Color(0, 100, 255, 128));
        jlLF.setBackground(new Color(255, 255, 0, 128));
        jlHF.setBackground(new Color(255, 0, 255, 128));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        flagBicubic = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jtfBicubicWindow = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfPrecision = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        flagWindow = new javax.swing.JCheckBox();
        jcbWindow = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        flagZeromean = new javax.swing.JCheckBox();
        flagDetrend = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        flagSamplingAll = new javax.swing.JCheckBox();
        jtfSampling = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        jtfFrequency = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        flagArModelDefault = new javax.swing.JCheckBox();
        jtfArModel = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        flagPower = new javax.swing.JRadioButton();
        flagSquaredPower = new javax.swing.JRadioButton();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jlVLF = new javax.swing.JLabel();
        jlLF = new javax.swing.JLabel();
        jlHF = new javax.swing.JLabel();
        jtfVLFmin = new javax.swing.JTextField();
        jtfLFmin = new javax.swing.JTextField();
        jtfHFmin = new javax.swing.JTextField();
        jtfVLFmax = new javax.swing.JTextField();
        jtfLFmax = new javax.swing.JTextField();
        jtfHFmax = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jbEdit = new javax.swing.JButton();
        jbUpdate = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(570, 400));
        setPreferredSize(new java.awt.Dimension(570, 400));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pre-processing", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 1, 10))); // NOI18N
        jPanel10.setOpaque(false);
        jPanel10.setPreferredSize(new java.awt.Dimension(540, 120));
        jPanel10.setLayout(new java.awt.GridLayout(2, 0));

        jPanel11.setMinimumSize(new java.awt.Dimension(20, 37));
        jPanel11.setOpaque(false);
        jPanel11.setPreferredSize(new java.awt.Dimension(20, 37));
        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        flagBicubic.setBackground(new java.awt.Color(255, 255, 255));
        flagBicubic.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/sdk/connector/settings/Bundle"); // NOI18N
        flagBicubic.setText(bundle.getString("BICUBIC INTERPOLATION")); // NOI18N
        jPanel11.add(flagBicubic);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setMinimumSize(new java.awt.Dimension(10, 2));
        jSeparator3.setPreferredSize(new java.awt.Dimension(10, 1));
        jPanel11.add(jSeparator3);

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel4.setText(bundle.getString("WINDOW:")); // NOI18N
        jPanel11.add(jLabel4);

        jtfBicubicWindow.setColumns(5);
        jtfBicubicWindow.setText("512");
        jPanel11.add(jtfBicubicWindow);

        jLabel5.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel5.setText(bundle.getString("PRECISION:")); // NOI18N
        jPanel11.add(jLabel5);

        jtfPrecision.setColumns(5);
        jtfPrecision.setText("4");
        jPanel11.add(jtfPrecision);

        jPanel10.add(jPanel11);

        jPanel13.setOpaque(false);
        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        flagWindow.setBackground(new java.awt.Color(255, 255, 255));
        flagWindow.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        flagWindow.setText(bundle.getString("WINDOW:")); // NOI18N
        jPanel13.add(flagWindow);

        jcbWindow.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Welch", "Square", "Dirichlet", "Bartlett", "Hanning", "Hamming", "Blackman", "Blackman Harris", "Parzen" }));
        jPanel13.add(jcbWindow);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(5, 20));
        jPanel13.add(jSeparator1);

        flagZeromean.setBackground(new java.awt.Color(255, 255, 255));
        flagZeromean.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        flagZeromean.setSelected(true);
        flagZeromean.setText(bundle.getString("ZERO-MEAN")); // NOI18N
        jPanel13.add(flagZeromean);

        flagDetrend.setBackground(new java.awt.Color(255, 255, 255));
        flagDetrend.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        flagDetrend.setSelected(true);
        flagDetrend.setText(bundle.getString("LINEAR DETREND")); // NOI18N
        jPanel13.add(flagDetrend);

        jPanel10.add(jPanel13);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Params", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 1, 10))); // NOI18N
        jPanel6.setOpaque(false);
        jPanel6.setPreferredSize(new java.awt.Dimension(540, 120));
        jPanel6.setLayout(new java.awt.GridLayout(2, 0));

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        flagSamplingAll.setBackground(new java.awt.Color(255, 255, 255));
        flagSamplingAll.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        flagSamplingAll.setText(bundle.getString("ALL SAMPLES:")); // NOI18N
        flagSamplingAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flagSamplingAllchangeStateSamplingAll(evt);
            }
        });
        jPanel3.add(flagSamplingAll);

        jtfSampling.setColumns(5);
        jtfSampling.setText("128");
        jPanel3.add(jtfSampling);

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator6.setPreferredSize(new java.awt.Dimension(5, 20));
        jPanel3.add(jSeparator6);

        jLabel18.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel18.setText(bundle.getString("FREQUENCY(HZ):")); // NOI18N
        jPanel3.add(jLabel18);

        jtfFrequency.setColumns(3);
        jtfFrequency.setText("1");
        jPanel3.add(jtfFrequency);

        jPanel6.add(jPanel3);

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        flagArModelDefault.setBackground(new java.awt.Color(255, 255, 255));
        flagArModelDefault.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        flagArModelDefault.setText(bundle.getString("POLES:")); // NOI18N
        flagArModelDefault.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeStateDefaulArModel(evt);
            }
        });
        jPanel4.add(flagArModelDefault);

        jtfArModel.setColumns(5);
        jtfArModel.setText("16");
        jPanel4.add(jtfArModel);

        jPanel6.add(jPanel4);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Output", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 1, 10))); // NOI18N
        jPanel7.setOpaque(false);
        jPanel7.setPreferredSize(new java.awt.Dimension(540, 140));
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel9.setOpaque(false);
        jPanel9.setLayout(new java.awt.BorderLayout());

        flagPower.setBackground(new java.awt.Color(255, 255, 255));
        flagPower.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        flagPower.setSelected(true);
        flagPower.setText(bundle.getString("POWER")); // NOI18N
        jPanel9.add(flagPower, java.awt.BorderLayout.CENTER);

        flagSquaredPower.setBackground(new java.awt.Color(255, 255, 255));
        flagSquaredPower.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        flagSquaredPower.setText(bundle.getString("SQUARED MAG.")); // NOI18N
        jPanel9.add(flagSquaredPower, java.awt.BorderLayout.PAGE_START);

        jPanel7.add(jPanel9);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator5.setPreferredSize(new java.awt.Dimension(5, 50));
        jPanel7.add(jSeparator5);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 255)));
        jPanel8.setOpaque(false);
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jlVLF.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jlVLF.setText("VLF(Hz):");
        jlVLF.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jlVLF, gridBagConstraints);

        jlLF.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jlLF.setText("LF (Hz):");
        jlLF.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jlLF, gridBagConstraints);

        jlHF.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jlHF.setText("HF (Hz):");
        jlHF.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jlHF, gridBagConstraints);

        jtfVLFmin.setColumns(5);
        jtfVLFmin.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jtfVLFmin, gridBagConstraints);

        jtfLFmin.setColumns(5);
        jtfLFmin.setText("0.04");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jtfLFmin, gridBagConstraints);

        jtfHFmin.setColumns(5);
        jtfHFmin.setText("0.15");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jtfHFmin, gridBagConstraints);

        jtfVLFmax.setColumns(5);
        jtfVLFmax.setText("0.04");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jtfVLFmax, gridBagConstraints);

        jtfLFmax.setColumns(5);
        jtfLFmax.setText("0.15");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jtfLFmax, gridBagConstraints);

        jtfHFmax.setColumns(5);
        jtfHFmax.setText("0.4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel8.add(jtfHFmax, gridBagConstraints);

        jLabel24.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jLabel24, gridBagConstraints);

        jLabel25.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jLabel25, gridBagConstraints);

        jLabel26.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jLabel26, gridBagConstraints);

        jPanel7.add(jPanel8);

        jPanel12.setMinimumSize(new java.awt.Dimension(540, 40));
        jPanel12.setOpaque(false);
        jPanel12.setPreferredSize(new java.awt.Dimension(540, 37));
        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbEdit.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jbEdit.setText(bundle.getString("EDIT")); // NOI18N
        jbEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditActionPerformed(evt);
            }
        });
        jPanel12.add(jbEdit);

        jbUpdate.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jbUpdate.setText(bundle.getString("UPDATE")); // NOI18N
        jbUpdate.setEnabled(false);
        jbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateActionPerformed(evt);
            }
        });
        jPanel12.add(jbUpdate);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void changeStateDefaulArModel(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeStateDefaulArModel

        if(flagArModelDefault.isSelected()){
            jtfArModel.setEnabled(false);

        }else{
            jtfArModel.setEnabled(true);
        }
    }//GEN-LAST:event_changeStateDefaulArModel

    private void flagSamplingAllchangeStateSamplingAll(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flagSamplingAllchangeStateSamplingAll
        if(flagSamplingAll.isSelected()){
            jtfSampling.setEnabled(false);
            flagSamplingAll.setSelected(true);
            JOptionPane.showMessageDialog(this, java.util.ResourceBundle.getBundle("com/sdk/connector/settings/Bundle").getString("WARNING SAMPLING ALL"), java.util.ResourceBundle.getBundle("com/sdk/connector/settings/Bundle").getString("WARNING!") , JOptionPane.WARNING_MESSAGE);
        }else{
            flagSamplingAll.setSelected(false);
            jtfSampling.setEnabled(true);
        }
}//GEN-LAST:event_flagSamplingAllchangeStateSamplingAll

    private void jbEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditActionPerformed
        setEditable(true);
        jbUpdate.setEnabled(true);
        jbEdit.setEnabled(false);
        this.repaint();
        this.revalidate();
}//GEN-LAST:event_jbEditActionPerformed

    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateActionPerformed
        updateFields();
        jbUpdate.setEnabled(false);

        jbEdit.setEnabled(true);
        setEditable(false);
}//GEN-LAST:event_jbUpdateActionPerformed

    private void updateFields(){


        if(flagPower.isSelected()){
            getMemseSettingsEntity().setPlotPower(flagPower.isSelected());
        }else{
            getMemseSettingsEntity().setPlotPower(flagPower.isSelected());
        }


        getMemseSettingsEntity().setArModel(Integer.parseInt(jtfArModel.getText()));
        getMemseSettingsEntity().setBicubic(flagBicubic.isSelected());
        getMemseSettingsEntity().setBicubicWindow(Integer.parseInt(jtfBicubicWindow.getText()));
        getMemseSettingsEntity().setBicubicPrecision(Integer.parseInt(jtfPrecision.getText()));


        getMemseSettingsEntity().setDetrend(flagDetrend.isSelected());
        getMemseSettingsEntity().setZeromean(flagZeromean.isSelected());

        if(flagWindow.isSelected()){
            getMemseSettingsEntity().setWindow(jcbWindow.getSelectedItem().toString());
        }else{
            getMemseSettingsEntity().setWindow("");
        }
        if(flagSamplingAll.isSelected()){
            getMemseSettingsEntity().setSamples(0);
        }else{
            getMemseSettingsEntity().setSamples(Integer.parseInt(jtfSampling.getText()));
        }

        getMemseSettingsEntity().setFreq(Integer.parseInt(jtfFrequency.getText()));

        getMemseSettingsEntity().setLFmin(Double.parseDouble(jtfLFmin.getText()));
        getMemseSettingsEntity().setLFmax(Double.parseDouble(jtfLFmax.getText()));
        getMemseSettingsEntity().setHFmin(Double.parseDouble(jtfHFmin.getText()));
        getMemseSettingsEntity().setHFmax(Double.parseDouble(jtfHFmax.getText()));
        getMemseSettingsEntity().setVLFmin(Double.parseDouble(jtfVLFmin.getText()));
        getMemseSettingsEntity().setVLFmax(Double.parseDouble(jtfVLFmax.getText()));

    }

    private void setEditable(boolean flag){
        flagBicubic.setEnabled(flag);
        flagDetrend.setEnabled(flag);

        flagPower.setEnabled(flag);
        flagSamplingAll.setEnabled(flag);
        flagSquaredPower.setEnabled(flag);
        flagWindow.setEnabled(flag);
        flagZeromean.setEnabled(flag);
        jcbWindow.setEnabled(flag);
        jtfBicubicWindow.setEnabled(flag);
        jtfPrecision.setEnabled(flag);

        jtfFrequency.setEnabled(flag);
        jtfHFmax.setEnabled(flag);
        jtfHFmin.setEnabled(flag);

        jtfLFmax.setEnabled(flag);
        jtfLFmin.setEnabled(flag);

        jtfSampling.setEnabled(flag);

        jtfVLFmax.setEnabled(flag);
        jtfVLFmin.setEnabled(flag);
        flagBicubic.setEnabled(flag); // NOI18N

        jLabel4.setEnabled(flag);
        jLabel5.setEnabled(flag);

        flagWindow.setEnabled(flag); // NOI18N
        flagZeromean.setEnabled(flag); // NOI18N
        flagDetrend.setEnabled(flag); // NOI18N

        flagPower.setEnabled(flag); // NOI18N
        flagSquaredPower.setEnabled(flag);
        
        flagArModelDefault.setEnabled(flag);
        flagSamplingAll.setEnabled(flag); // NOI18N
        jtfArModel.setEnabled(flag);
        jLabel18.setEnabled(flag);
jlVLF.setEnabled(flag);
jlLF.setEnabled(flag);
jlHF.setEnabled(flag);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox flagArModelDefault;
    private javax.swing.JCheckBox flagBicubic;
    private javax.swing.JCheckBox flagDetrend;
    private javax.swing.JRadioButton flagPower;
    private static javax.swing.JCheckBox flagSamplingAll;
    private javax.swing.JRadioButton flagSquaredPower;
    private javax.swing.JCheckBox flagWindow;
    private javax.swing.JCheckBox flagZeromean;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JButton jbEdit;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JComboBox jcbWindow;
    private javax.swing.JLabel jlHF;
    private javax.swing.JLabel jlLF;
    private javax.swing.JLabel jlVLF;
    private javax.swing.JTextField jtfArModel;
    private javax.swing.JTextField jtfBicubicWindow;
    private javax.swing.JTextField jtfFrequency;
    private javax.swing.JTextField jtfHFmax;
    private javax.swing.JTextField jtfHFmin;
    private javax.swing.JTextField jtfLFmax;
    private javax.swing.JTextField jtfLFmin;
    private javax.swing.JTextField jtfPrecision;
    private static javax.swing.JTextField jtfSampling;
    private javax.swing.JTextField jtfVLFmax;
    private javax.swing.JTextField jtfVLFmin;
    // End of variables declaration//GEN-END:variables

}
